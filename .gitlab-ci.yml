include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Jobs/Container-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
stages:
  - update
  - build
  - test
update-dockerfile:
  stage: update
  image:
    name: registry.ocnr.org/infra/repo-updater:latest
    entrypoint: [""]
  id_tokens:
    VAULT_ID_TOKEN:
      aud: https://vault.ocnr.org
  before_script:
    - |
      set -e
      export VAULT_TOKEN=$(vault write -field=token auth/jwt/login role=repo-updater jwt="${VAULT_ID_TOKEN}")
      vault kv get -field=id_ed25519 "repo-updater/${CI_PROJECT_PATH}" > "${HOME}/.ssh/id_ed25519"
      vault kv get -field=known_hosts "repo-updater/common" > "${HOME}/.ssh/known_hosts"
      chmod 600 "${HOME}/.ssh/id_ed25519"
  script:
    - update-dockerfile-commit
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - |
      set -e

      if [[ -z "${CI_COMMIT_TAG}" ]]; then
        CI_APPLICATION_REPOSITORY="${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}"
        CI_APPLICATION_TAG="${CI_COMMIT_SHA}"
      else
        CI_APPLICATION_REPOSITORY="${CI_REGISTRY_IMAGE}"
        CI_APPLICATION_TAG="${CI_COMMIT_TAG}"
      fi

      IMAGE_TAGGED="${CI_APPLICATION_REPOSITORY}:${CI_APPLICATION_TAG}"
      IMAGE_LATEST="${CI_APPLICATION_REPOSITORY}:latest"

      mkdir -p /kaniko/.docker
      echo "{\"auths\":{\"${CI_REGISTRY}\":{\"username\":\"${CI_REGISTRY_USER}\",\"password\":\"${CI_REGISTRY_PASSWORD}\"}}}" > /kaniko/.docker/config.json
      /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile" --destination "${IMAGE_TAGGED}" --destination "${IMAGE_LATEST}"
  rules:
    - if: '($CI_COMMIT_TAG || $CI_COMMIT_BRANCH) && $CI_PIPELINE_SOURCE != "schedule"'
